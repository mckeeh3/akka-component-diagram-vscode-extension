// tag::minimal[]
syntax = "proto3";

option java_multiple_files = true;
option java_package = "customer.api.proto"; // <1>

package customer.api;
// end::minimal[]

// tag::get[]
message Address {
  string street = 1;
  string city = 2;
}

message Customer {
  string email = 1;
  string name = 2;
  Address address = 3;
}
// end::get[]

message CreateCustomerRequest {
  string customer_id = 1;
  Customer customer = 2;
}
message CreateCustomerResponse {}

// tag::get[]
message GetCustomerRequest {
  string customer_id = 1;
}
// tag::get[]

message ChangeNameRequest {
  string customer_id = 1;
  string new_name = 2;
}
message ChangeNameResponse {}

message ChangeAddressRequest {
  string customer_id = 1;
  Address new_address = 2;
}
message ChangeAddressResponse {}

message CustomerByNameRequest {
  string name = 1;
}

message CustomerByEmailRequest {
  string email = 1;
}

message CustomerList {
  repeated Customer customers = 1;
}

message StreamCustomersRequest {
}

// tag::streaming-output[]
message CustomerSummary {
  string email = 1;
  string name = 2;
}

// tag::minimal[]

service CustomerGrpcEndpoint {
  // end::streaming-output[]
  // end::minimal[]

  rpc CreateCustomer (CreateCustomerRequest) returns (CreateCustomerResponse) {} // <2>

  // tag::get[]
  rpc GetCustomer (GetCustomerRequest) returns (Customer) {}
  // end::get[]

  rpc ChangeName (ChangeNameRequest) returns (ChangeNameResponse) {}

  rpc ChangeAddress (ChangeAddressRequest) returns (ChangeAddressResponse) {}

  rpc CustomerByName (CustomerByNameRequest) returns (CustomerList) {}

  rpc CustomerByEmail (CustomerByEmailRequest) returns (CustomerList) {}

  // tag::streaming-output[]
  // ...
  rpc CustomerByEmailStream (CustomerByEmailRequest) returns (stream CustomerSummary) {}
// tag::minimal[]
}
// end::minimal[]
// end::streaming-output[]

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}
